/*! Congo v1.6.3 | MIT License | https://github.com/jpanther/congo */

/*! tailwindcss v3.0.15 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.prose {
  color: var(--color-neutral-700);
  max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose a {
  color: var(--color-primary-700);
  text-decoration: underline;
  font-weight: 500;
  -webkit-text-decoration-color: var(--color-primary-300);
          text-decoration-color: var(--color-primary-300);
}

:where(.prose a:hover):not(:where([class~="not-prose"] *)) {
  background-color: var(--color-primary-600);
  border-radius: 0.09rem;
  color: var(--color-neutral);
  text-decoration: none;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-900);
  font-weight: 600;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--color-neutral-200);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--color-neutral-800);
  border-left-width: 0.25rem;
  border-left-color: var(--color-primary-200);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-900);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
  position: relative;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-800);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
  position: relative;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-800);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
  position: relative;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-800);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
  position: relative;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--color-secondary-700);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: var(--color-secondary-700);
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-700);
  background-color: var(--color-neutral-50);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: var(--color-neutral-700);
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--color-neutral-500);
  color: var(--color-neutral-800);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--color-neutral-300);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.9em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::before {
  color: var(--color-neutral-800);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::before {
  background-color: var(--color-neutral-500);
}

.prose :where(kbd):not(:where([class~="not-prose"] *)) {
  background-color: var(--color-neutral-200);
  padding: 0.1rem 0.4rem;
  border-radius: 0.25rem;
  font-size: 0.9rem;
  font-weight: 600;
}

.prose :where(mark):not(:where([class~="not-prose"] *)) {
  background-color: var(--color-secondary-200);
  padding: 0.1rem 0.2rem;
  border-radius: 0.12rem;
}

body a, body button {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Scale SVG icons to text size */

.icon svg {
  height: 1em;
  width: 1em;
}

/* Heading anchors */

.prose .heading-anchor {
  position: absolute;
  top: 0px;
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
  opacity: 0;
  width: 1.1em;
  left: -1.1em;
}

/* .prose .heading-anchor:hover {
  @apply underline bg-transparent text-primary-600;
}
.prose .heading-anchor:hover,
.prose .heading-anchor:focus,
.prose h2:hover > .heading-anchor,
.prose h3:hover > .heading-anchor,
.prose h4:hover > .heading-anchor {
  @apply opacity-100;
} */

/* Prose escape hatch */

.no-prose > p {
  margin-top: 0px;
}

.no-prose > p:last-child {
  margin-bottom: 0px;
}

/* Article pagination */

.article-pagination a:hover .article-pagination-title {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
  -webkit-text-decoration-color: var(--color-primary-500);
          text-decoration-color: var(--color-primary-500);
}

.article-pagination a:hover .article-pagination-direction {
  color: var(--color-primary-700);
}

.dark .article-pagination a:hover .article-pagination-direction {
  color: var(--color-primary-400);
}

/* -- Chroma Highlight -- */

/* Background */

.prose .chroma {
  border-radius: 0.375rem;
  background-color: var(--color-neutral-50);
  color: var(--color-neutral-700);
}

.dark .prose .chroma {
  background-color: var(--color-neutral-700);
  color: var(--color-neutral-200);
}

/* Other */

.chroma .x {
}

/* Error */

.chroma .err {
}

/* LineTableTD */

.chroma .lntd, .chroma .lntd pre {
  margin: 0px;
  border-style: none;
  padding: 0px;
  vertical-align: top;
}

/* LineTable */

.chroma .lntable {
  display: block;
  width: auto;
  overflow: hidden;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  border-spacing: 0;
}

/* LineHighlight */

.chroma .hl {
  margin-left: -1rem;
  margin-right: -1rem;
  display: block;
  width: auto;
  background-color: var(--color-primary-100);
  padding-left: 1rem;
  padding-right: 1rem;
}

.dark .chroma .hl {
  background-color: var(--color-primary-900);
}

.chroma .lntd .hl {
  margin: 0px;
  padding: 0px;
}

/* LineNumbersTable */

.chroma .lnt {
  color: var(--color-neutral-600);
}

.dark .chroma .lnt {
  color: var(--color-neutral-300);
}

.chroma .lnt {
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;
}

/* LineNumbers */

.chroma .ln {
  color: var(--color-neutral-600);
}

.dark .chroma .ln {
  color: var(--color-neutral-300);
}

.chroma .ln {
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;
}

/* Keyword */

.chroma .k {
  color: var(--color-primary-600);
}

.dark .chroma .k {
  color: var(--color-primary-300);
}

/* KeywordConstant */

.chroma .kc {
  font-weight: 600;
  color: var(--color-secondary-400);
}

.dark .chroma .kc {
  color: var(--color-secondary-500);
}

/* KeywordDeclaration */

.chroma .kd {
  color: var(--color-primary-600);
}

.dark .chroma .kd {
  color: var(--color-primary-300);
}

/* KeywordNamespace */

.chroma .kn {
  color: var(--color-primary-600);
}

.dark .chroma .kn {
  color: var(--color-primary-300);
}

/* KeywordPseudo */

.chroma .kp {
  color: var(--color-primary-600);
}

.dark .chroma .kp {
  color: var(--color-primary-300);
}

/* KeywordReserved */

.chroma .kr {
  color: var(--color-primary-600);
}

.dark .chroma .kr {
  color: var(--color-primary-300);
}

/* KeywordType */

.chroma .kt {
  color: var(--color-secondary-400);
}

.dark .chroma .kt {
  color: var(--color-secondary-600);
}

/* Name */

.chroma .n {
  color: var(--color-secondary-900);
}

.dark .chroma .n {
  color: var(--color-secondary-200);
}

/* NameAttribute */

.chroma .na {
  color: var(--color-secondary-800);
}

.dark .chroma .na {
  color: var(--color-secondary-300);
}

/* NameBuiltin */

.chroma .nb {
  color: var(--color-secondary-800);
}

.dark .chroma .nb {
  color: var(--color-secondary-300);
}

/* NameBuiltinPseudo */

.chroma .bp {
  color: var(--color-secondary-800);
}

.dark .chroma .bp {
  color: var(--color-secondary-300);
}

/* NameClass */

.chroma .nc {
  color: var(--color-primary-600);
}

.dark .chroma .nc {
  color: var(--color-primary-300);
}

/* NameConstant */

.chroma .no {
  font-weight: 600;
  color: var(--color-secondary-400);
}

.dark .chroma .no {
  color: var(--color-secondary-500);
}

/* NameDecorator */

.chroma .nd {
  color: var(--color-secondary-900);
}

.dark .chroma .nd {
  color: var(--color-secondary-200);
}

/* NameEntity */

.chroma .ni {
  color: var(--color-secondary-900);
}

.dark .chroma .ni {
  color: var(--color-secondary-200);
}

/* NameException */

.chroma .ne {
  font-weight: 600;
  color: var(--color-secondary-400);
}

.dark .chroma .ne {
  color: var(--color-secondary-500);
}

/* NameFunction */

.chroma .nf {
  color: var(--color-secondary-600);
}

.dark .chroma .nf {
  color: var(--color-secondary-500);
}

/* NameFunctionMagic */

.chroma .fm {
  color: var(--color-primary-600);
}

.dark .chroma .fm {
  color: var(--color-primary-300);
}

/* NameLabel */

.chroma .nl {
  color: var(--color-secondary-900);
}

.dark .chroma .nl {
  color: var(--color-secondary-200);
}

/* NameNamespace */

.chroma .nn {
  color: var(--color-primary-600);
}

.dark .chroma .nn {
  color: var(--color-primary-300);
}

/* NameOther */

.chroma .nx {
  color: var(--color-secondary-800);
}

.dark .chroma .nx {
  color: var(--color-secondary-300);
}

/* NameProperty */

.chroma .py {
  color: #cebc3a;
}

/* NameTag */

.chroma .nt {
  color: var(--color-secondary-800);
}

.dark .chroma .nt {
  color: var(--color-secondary-300);
}

/* NameVariable */

.chroma .nv {
  color: var(--color-secondary-400);
}

.dark .chroma .nv {
  color: var(--color-secondary-600);
}

/* NameVariableClass */

.chroma .vc {
  color: var(--color-primary-600);
}

.dark .chroma .vc {
  color: var(--color-primary-300);
}

/* NameVariableGlobal */

.chroma .vg {
  font-weight: 600;
  color: var(--color-secondary-400);
}

.dark .chroma .vg {
  color: var(--color-secondary-500);
}

/* NameVariableInstance */

.chroma .vi {
  color: var(--color-secondary-400);
}

.dark .chroma .vi {
  color: var(--color-secondary-600);
}

/* NameVariableMagic */

.chroma .vm {
  color: var(--color-secondary-400);
}

.dark .chroma .vm {
  color: var(--color-secondary-600);
}

/* Literal */

.chroma .l {
  color: var(--color-primary-800);
}

.dark .chroma .l {
  color: var(--color-primary-400);
}

/* LiteralDate */

.chroma .ld {
  color: var(--color-primary-800);
}

.dark .chroma .ld {
  color: var(--color-primary-400);
}

/* LiteralString */

.chroma .s {
  color: var(--color-primary-800);
}

.dark .chroma .s {
  color: var(--color-primary-400);
}

/* LiteralStringAffix */

.chroma .sa {
  color: var(--color-primary-800);
}

.dark .chroma .sa {
  color: var(--color-primary-400);
}

/* LiteralStringBacktick */

.chroma .sb {
  color: var(--color-primary-800);
}

.dark .chroma .sb {
  color: var(--color-primary-400);
}

/* LiteralStringChar */

.chroma .sc {
  color: var(--color-primary-800);
}

.dark .chroma .sc {
  color: var(--color-primary-400);
}

/* LiteralStringDelimiter */

.chroma .dl {
  color: var(--color-primary-800);
}

.dark .chroma .dl {
  color: var(--color-primary-400);
}

/* LiteralStringDoc */

.chroma .sd {
  color: var(--color-primary-800);
}

.dark .chroma .sd {
  color: var(--color-primary-400);
}

/* LiteralStringDouble */

.chroma .s2 {
  color: var(--color-primary-800);
}

.dark .chroma .s2 {
  color: var(--color-primary-400);
}

/* LiteralStringEscape */

.chroma .se {
  font-weight: 600;
  color: var(--color-secondary-400);
}

.dark .chroma .se {
  color: var(--color-secondary-500);
}

/* LiteralStringHeredoc */

.chroma .sh {
  color: var(--color-primary-800);
}

.dark .chroma .sh {
  color: var(--color-primary-400);
}

/* LiteralStringInterpol */

.chroma .si {
  color: var(--color-primary-800);
}

.dark .chroma .si {
  color: var(--color-primary-400);
}

/* LiteralStringOther */

.chroma .sx {
  color: var(--color-primary-800);
}

.dark .chroma .sx {
  color: var(--color-primary-400);
}

/* LiteralStringRegex */

.chroma .sr {
  font-weight: 600;
  color: var(--color-primary-800);
}

.dark .chroma .sr {
  color: var(--color-primary-400);
}

/* LiteralStringSingle */

.chroma .s1 {
  color: var(--color-primary-800);
}

.dark .chroma .s1 {
  color: var(--color-primary-400);
}

/* LiteralStringSymbol */

.chroma .ss {
  font-weight: 600;
  color: var(--color-primary-800);
}

.dark .chroma .ss {
  color: var(--color-primary-400);
}

/* LiteralNumber */

.chroma .m {
  color: var(--color-secondary-400);
}

.dark .chroma .m {
  color: var(--color-secondary-600);
}

/* LiteralNumberBin */

.chroma .mb {
  color: var(--color-secondary-400);
}

.dark .chroma .mb {
  color: var(--color-secondary-600);
}

/* LiteralNumberFloat */

.chroma .mf {
  color: var(--color-secondary-400);
}

.dark .chroma .mf {
  color: var(--color-secondary-600);
}

/* LiteralNumberHex */

.chroma .mh {
  color: var(--color-secondary-400);
}

.dark .chroma .mh {
  color: var(--color-secondary-600);
}

/* LiteralNumberInteger */

.chroma .mi {
  color: var(--color-secondary-400);
}

.dark .chroma .mi {
  color: var(--color-secondary-600);
}

/* LiteralNumberIntegerLong */

.chroma .il {
  color: var(--color-secondary-400);
}

.dark .chroma .il {
  color: var(--color-secondary-600);
}

/* LiteralNumberOct */

.chroma .mo {
  color: var(--color-secondary-400);
}

.dark .chroma .mo {
  color: var(--color-secondary-600);
}

/* Operator */

.chroma .o {
  color: var(--color-primary-600);
}

/* OperatorWord */

.chroma .ow {
  font-weight: 600;
  color: var(--color-primary-400);
}

.dark .chroma .ow {
  color: var(--color-primary-600);
}

/* Punctuation */

.chroma .p {
}

/* Comment */

.chroma .c {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .c {
  color: var(--color-neutral-400);
}

/* CommentHashbang */

.chroma .ch {
  font-weight: 600;
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .ch {
  color: var(--color-neutral-400);
}

/* CommentMultiline */

.chroma .cm {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .cm {
  color: var(--color-neutral-400);
}

/* CommentSingle */

.chroma .c1 {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .c1 {
  color: var(--color-neutral-400);
}

/* CommentSpecial */

.chroma .cs {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .cs {
  color: var(--color-neutral-400);
}

/* CommentPreproc */

.chroma .cp {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .cp {
  color: var(--color-neutral-400);
}

/* CommentPreprocFile */

.chroma .cpf {
  font-style: italic;
  color: var(--color-neutral-500);
}

.dark .chroma .cpf {
  color: var(--color-neutral-400);
}

/* Generic */

.chroma .g {
}

/* GenericDeleted */

.chroma .gd {
}

/* GenericEmph */

.chroma .ge {
  font-style: italic;
}

/* GenericError */

.chroma .gr {
}

/* GenericHeading */

.chroma .gh {
  font-weight: 600;
  color: var(--color-neutral-500);
}

/* GenericInserted */

.chroma .gi {
  color: var(--color-primary-800);
}

.dark .chroma .gi {
  color: var(--color-primary-400);
}

/* GenericOutput */

.chroma .go {
  color: var(--color-primary-800);
}

.dark .chroma .go {
  color: var(--color-primary-400);
}

/* GenericPrompt */

.chroma .gp {
  color: var(--color-primary-800);
}

.dark .chroma .gp {
  color: var(--color-primary-400);
}

/* GenericStrong */

.chroma .gs {
  font-weight: 600;
}

/* GenericSubheading */

.chroma .gu {
  color: var(--color-neutral-500);
}

/* GenericTraceback */

.chroma .gt {
  color: var(--color-neutral-500);
}

/* GenericUnderline */

.chroma .gl {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

/* TextWhitespace */

.chroma .w {
}

.relative {
  position: relative;
}

.m-auto {
  margin: auto;
}

.m-1 {
  margin: 0.25rem;
}

.-mx-2 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

.my-3 {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mb-12 {
  margin-bottom: 3rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-0 {
  margin-top: 0px;
}

.mt-6 {
  margin-top: 1.5rem;
}

.-mt-2 {
  margin-top: -0.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mr-3 {
  margin-right: 0.75rem;
}

.mt-\[0\.1rem\] {
  margin-top: 0.1rem;
}

.ml-3 {
  margin-left: 0.75rem;
}

.\!mt-0 {
  margin-top: 0px !important;
}

.\!mb-0 {
  margin-bottom: 0px !important;
}

.mr-4 {
  margin-right: 1rem;
}

.\!mb-9 {
  margin-bottom: 2.25rem !important;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mb-\[2px\] {
  margin-bottom: 2px;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-full {
  height: 100%;
}

.h-44 {
  height: 11rem;
}

.h-screen {
  height: 100vh;
}

.h-24 {
  height: 6rem;
}

.h-36 {
  height: 9rem;
}

.max-h-\[10rem\] {
  max-height: 10rem;
}

.w-44 {
  width: 11rem;
}

.w-36 {
  width: 9rem;
}

.w-full {
  width: 100%;
}

.w-24 {
  width: 6rem;
}

.min-w-\[1\.8rem\] {
  min-width: 1.8rem;
}

.min-w-\[2\.4rem\] {
  min-width: 2.4rem;
}

.max-w-\[10rem\] {
  max-width: 10rem;
}

.max-w-7xl {
  max-width: 80rem;
}

.max-w-prose {
  max-width: 65ch;
}

.max-w-full {
  max-width: 100%;
}

.flex-grow {
  flex-grow: 1;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-default {
  cursor: default;
}

.list-none {
  list-style-type: none;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.place-self-center {
  place-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded {
  border-radius: 0.25rem;
}

.\!rounded-md {
  border-radius: 0.375rem !important;
}

.border-\[1px\] {
  border-width: 1px;
}

.border {
  border-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-dotted {
  border-style: dotted;
}

.border-neutral-400 {
  border-color: var(--color-neutral-400);
}

.border-neutral-500 {
  border-color: var(--color-neutral-500);
}

.border-neutral-300 {
  border-color: var(--color-neutral-300);
}

.border-primary-400 {
  border-color: var(--color-primary-400);
}

.border-neutral-200 {
  border-color: var(--color-neutral-200);
}

.border-neutral-700 {
  border-color: var(--color-neutral-700);
}

.bg-neutral {
  background-color: var(--color-neutral);
}

.bg-primary-200 {
  background-color: var(--color-primary-200);
}

.bg-neutral-300 {
  background-color: var(--color-neutral-300);
}

.bg-primary-100 {
  background-color: var(--color-primary-100);
}

.bg-primary-600 {
  background-color: var(--color-primary-600);
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.object-left {
  -o-object-position: left;
     object-position: left;
}

.p-1 {
  padding: 0.25rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-\[1px\] {
  padding-top: 1px;
  padding-bottom: 1px;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pt-8 {
  padding-top: 2rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pr-3 {
  padding-right: 0.75rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-\[0\.6rem\] {
  font-size: 0.6rem;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.font-extrabold {
  font-weight: 800;
}

.font-bold {
  font-weight: 700;
}

.font-normal {
  font-weight: 400;
}

.uppercase {
  text-transform: uppercase;
}

.leading-7 {
  line-height: 1.75rem;
}

.leading-6 {
  line-height: 1.5rem;
}

.leading-3 {
  line-height: .75rem;
}

.text-neutral-500 {
  color: var(--color-neutral-500);
}

.text-neutral-400 {
  color: var(--color-neutral-400);
}

.text-neutral-900 {
  color: var(--color-neutral-900);
}

.text-primary-600 {
  color: var(--color-primary-600);
}

.text-primary-500 {
  color: var(--color-primary-500);
}

.text-neutral-700 {
  color: var(--color-neutral-700);
}

.text-neutral-800 {
  color: var(--color-neutral-800);
}

.text-primary-700 {
  color: var(--color-primary-700);
}

.text-primary-400 {
  color: var(--color-primary-400);
}

.\!text-neutral {
  color: var(--color-neutral) !important;
}

.\!no-underline {
  -webkit-text-decoration-line: none !important;
          text-decoration-line: none !important;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-1000 {
  transition-duration: 1000ms;
}

.first\:mt-8:first-child {
  margin-top: 2rem;
}

.hover\:mb-4:hover {
  margin-bottom: 1rem;
}

.hover\:h-48:hover {
  height: 12rem;
}

.hover\:w-48:hover {
  width: 12rem;
}

.hover\:rounded-md:hover {
  border-radius: 0.375rem;
}

.hover\:rounded-2xl:hover {
  border-radius: 1rem;
}

.hover\:border-b-2:hover {
  border-bottom-width: 2px;
}

.hover\:border-neutral-600:hover {
  border-color: var(--color-neutral-600);
}

.hover\:border-neutral-300:hover {
  border-color: var(--color-neutral-300);
}

.hover\:border-primary-800:hover {
  border-color: var(--color-primary-800);
}

.hover\:border-primary-400:hover {
  border-color: var(--color-primary-400);
}

.hover\:border-primary-500:hover {
  border-color: var(--color-primary-500);
}

.hover\:border-neutral-800:hover {
  border-color: var(--color-neutral-800);
}

.hover\:bg-primary-600:hover {
  background-color: var(--color-primary-600);
}

.hover\:bg-primary-500:hover {
  background-color: var(--color-primary-500);
}

.hover\:\!bg-primary-500:hover {
  background-color: var(--color-primary-500) !important;
}

.hover\:text-primary-500:hover {
  color: var(--color-primary-500);
}

.hover\:text-neutral-800:hover {
  color: var(--color-neutral-800);
}

.hover\:text-neutral-100:hover {
  color: var(--color-neutral-100);
}

.hover\:text-primary-800:hover {
  color: var(--color-primary-800);
}

.hover\:text-primary-700:hover {
  color: var(--color-primary-700);
}

.hover\:text-primary-400:hover {
  color: var(--color-primary-400);
}

.hover\:text-neutral:hover {
  color: var(--color-neutral);
}

.hover\:underline:hover {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

.hover\:underline-offset-\[5px\]:hover {
  text-underline-offset: 5px;
}

.hover\:underline-neutral-300:hover {
  -webkit-text-decoration-color: var(--color-neutral-300);
          text-decoration-color: var(--color-neutral-300);
}

.hover\:underline-primary-400:hover {
  -webkit-text-decoration-color: var(--color-primary-400);
          text-decoration-color: var(--color-primary-400);
}

.hover\:underline-primary-500:hover {
  -webkit-text-decoration-color: var(--color-primary-500);
          text-decoration-color: var(--color-primary-500);
}

.hover\:underline-primary-700:hover {
  -webkit-text-decoration-color: var(--color-primary-700);
          text-decoration-color: var(--color-primary-700);
}

.hover\:underline-offset-small:hover {
  text-underline-offset: 2px;
}

.hover\:underline-thickness-bold:hover {
  text-decoration-thickness: 2px;
}

.dark .dark\:prose-light {
  color: var(--color-neutral-300);
}

.dark .dark\:prose-light a {
  color: var(--color-primary-400);
  -webkit-text-decoration-color: var(--color-neutral-500);
          text-decoration-color: var(--color-neutral-500);
}

:where(.dark .dark\:prose-light a:hover):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral);
  text-decoration: none;
}

.dark .dark\:prose-light :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral);
}

.dark .dark\:prose-light :where(ol > li):not(:where([class~="not-prose"] *))::before {
  color: var(--color-neutral-400);
}

.dark .dark\:prose-light :where(ul > li):not(:where([class~="not-prose"] *))::before {
  background-color: var(--color-neutral-600);
}

.dark .dark\:prose-light :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--color-neutral-500);
}

.dark .dark\:prose-light :where(blockquote):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-200);
  border-left-color: var(--color-primary-900);
}

.dark .dark\:prose-light :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral);
}

.dark .dark\:prose-light :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-50);
}

.dark .dark\:prose-light :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-50);
}

.dark .dark\:prose-light :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-50);
}

.dark .dark\:prose-light :where(figure figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-400);
}

.dark .dark\:prose-light :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--color-secondary-400);
}

.dark .dark\:prose-light :where(a code):not(:where([class~="not-prose"] *)) {
  color: var(--color-secondary-400);
}

.dark .dark\:prose-light :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-200);
  background-color: var(--color-neutral-700);
}

.dark .dark\:prose-light :where(pre code):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral-200);
}

.dark .dark\:prose-light :where(thead):not(:where([class~="not-prose"] *)) {
  color: var(--color-neutral);
  border-bottom-color: var(--color-neutral-500);
}

.dark .dark\:prose-light :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-color: var(--color-neutral-700);
}

.dark .dark\:prose-light :where(kbd):not(:where([class~="not-prose"] *)) {
  background-color: var(--color-neutral-700);
  color: var(--color-neutral-300);
}

.dark .dark\:prose-light :where(mark):not(:where([class~="not-prose"] *)) {
  background-color: var(--color-secondary-400);
}

.dark .dark\:inline {
  display: inline;
}

.dark .dark\:hidden {
  display: none;
}

.dark .dark\:border-neutral-600 {
  border-color: var(--color-neutral-600);
}

.dark .dark\:border-primary-600 {
  border-color: var(--color-primary-600);
}

.dark .dark\:bg-neutral-800 {
  background-color: var(--color-neutral-800);
}

.dark .dark\:bg-primary-400 {
  background-color: var(--color-primary-400);
}

.dark .dark\:bg-neutral-700 {
  background-color: var(--color-neutral-700);
}

.dark .dark\:bg-primary-900 {
  background-color: var(--color-primary-900);
}

.dark .dark\:bg-primary-800 {
  background-color: var(--color-primary-800);
}

.dark .dark\:text-neutral-400 {
  color: var(--color-neutral-400);
}

.dark .dark\:text-neutral-600 {
  color: var(--color-neutral-600);
}

.dark .dark\:text-neutral-500 {
  color: var(--color-neutral-500);
}

.dark .dark\:text-neutral {
  color: var(--color-neutral);
}

.dark .dark\:text-primary-400 {
  color: var(--color-primary-400);
}

.dark .dark\:text-neutral-300 {
  color: var(--color-neutral-300);
}

.dark .dark\:text-neutral-800 {
  color: var(--color-neutral-800);
}

.dark .dark\:underline-neutral-600 {
  -webkit-text-decoration-color: var(--color-neutral-600);
          text-decoration-color: var(--color-neutral-600);
}

.dark .dark\:hover\:border-primary-400:hover {
  border-color: var(--color-primary-400);
}

.dark .dark\:hover\:border-neutral-400:hover {
  border-color: var(--color-neutral-400);
}

.dark .dark\:hover\:bg-primary-400:hover {
  background-color: var(--color-primary-400);
}

.dark .dark\:hover\:\!bg-primary-700:hover {
  background-color: var(--color-primary-700) !important;
}

.dark .dark\:hover\:text-primary-200:hover {
  color: var(--color-primary-200);
}

.dark .dark\:hover\:text-primary-300:hover {
  color: var(--color-primary-300);
}

.dark .dark\:hover\:text-primary-400:hover {
  color: var(--color-primary-400);
}

.dark .dark\:hover\:text-neutral-800:hover {
  color: var(--color-neutral-800);
}

.dark .dark\:hover\:underline-primary-300:hover {
  -webkit-text-decoration-color: var(--color-primary-300);
          text-decoration-color: var(--color-primary-300);
}

@media (min-width: 640px) {
  .sm\:mb-0 {
    margin-bottom: 0px;
  }

  .sm\:mr-7 {
    margin-right: 1.75rem;
  }

  .sm\:w-1\/2 {
    width: 50%;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:px-14 {
    padding-left: 3.5rem;
    padding-right: 3.5rem;
  }

  .sm\:py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .sm\:last\:mr-0:last-child {
    margin-right: 0px;
  }
}

@media (min-width: 768px) {
  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:mr-4 {
    margin-right: 1rem;
  }

  .md\:w-1\/3 {
    width: 33.333333%;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
  }

  .md\:px-24 {
    padding-left: 6rem;
    padding-right: 6rem;
  }

  .md\:last\:mr-0:last-child {
    margin-right: 0px;
  }
}

@media (min-width: 1024px) {
  .lg\:w-1\/4 {
    width: 25%;
  }

  .lg\:px-32 {
    padding-left: 8rem;
    padding-right: 8rem;
  }
}

@media (min-width: 1280px) {
  .xl\:w-1\/5 {
    width: 20%;
  }
}
